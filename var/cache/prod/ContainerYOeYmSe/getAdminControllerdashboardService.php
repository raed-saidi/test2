<?php

namespace ContainerYOeYmSe;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAdminControllerdashboardService extends App_KernelProdDebugContainer
{
    /**
     * Gets the private '.service_locator.hGnnpIW.App\Controller\Admin\AdminController::dashboard()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.hGnnpIW.App\\Controller\\Admin\\AdminController::dashboard()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'productRepository' => ['privates', 'App\\Repository\\ProductRepository', 'getProductRepositoryService', true],
            'orderRepository' => ['privates', '.errored.go90F_p', NULL, 'Cannot determine controller argument for "App\\Controller\\Admin\\AdminController::dashboard()": the $orderRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\OrderRepository".'],
            'userRepository' => ['privates', 'App\\Repository\\UserRepository', 'getUserRepositoryService', true],
        ], [
            'productRepository' => 'App\\Repository\\ProductRepository',
            'orderRepository' => '?',
            'userRepository' => 'App\\Repository\\UserRepository',
        ]))->withContext('App\\Controller\\Admin\\AdminController::dashboard()', $container);
    }
}
